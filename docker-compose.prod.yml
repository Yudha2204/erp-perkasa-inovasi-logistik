version: '3.8'

services:
  # Laravel Application (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aplpil_app_prod
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - aplpil_network

  # Nginx Web Server (Production)
  webserver:
    image: nginx:alpine
    container_name: aplpil_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    networks:
      - aplpil_network

  # MySQL Database (Production)
  db:
    image: mysql:8.0
    container_name: aplpil_db_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata_prod:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - aplpil_network

  # Redis Cache (Production)
  redis:
    image: redis:alpine
    container_name: aplpil_redis_prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - aplpil_network

volumes:
  dbdata_prod:
    driver: local

networks:
  aplpil_network:
    driver: bridge 